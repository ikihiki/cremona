// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.1
// source: proto/cremona.proto

package cremona

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AgentIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AgentIdentity) Reset() {
	*x = AgentIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentIdentity) ProtoMessage() {}

func (x *AgentIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentIdentity.ProtoReflect.Descriptor instead.
func (*AgentIdentity) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{0}
}

func (x *AgentIdentity) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AgentIdentity) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{1}
}

type AgentErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *AgentIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Error    string         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AgentErrorMessage) Reset() {
	*x = AgentErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentErrorMessage) ProtoMessage() {}

func (x *AgentErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentErrorMessage.ProtoReflect.Descriptor instead.
func (*AgentErrorMessage) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{2}
}

func (x *AgentErrorMessage) GetIdentity() *AgentIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *AgentErrorMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AgentHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *AgentIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Round    uint64         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *AgentHealthResponse) Reset() {
	*x = AgentHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHealthResponse) ProtoMessage() {}

func (x *AgentHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHealthResponse.ProtoReflect.Descriptor instead.
func (*AgentHealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{3}
}

func (x *AgentHealthResponse) GetIdentity() *AgentIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *AgentHealthResponse) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

type AgentHealthReqest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *AgentIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Round    uint64         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *AgentHealthReqest) Reset() {
	*x = AgentHealthReqest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentHealthReqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHealthReqest) ProtoMessage() {}

func (x *AgentHealthReqest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHealthReqest.ProtoReflect.Descriptor instead.
func (*AgentHealthReqest) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{4}
}

func (x *AgentHealthReqest) GetIdentity() *AgentIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *AgentHealthReqest) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

type ActiveAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents []*AgentInfo `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *ActiveAgentsResponse) Reset() {
	*x = ActiveAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveAgentsResponse) ProtoMessage() {}

func (x *ActiveAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveAgentsResponse.ProtoReflect.Descriptor instead.
func (*ActiveAgentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{5}
}

func (x *ActiveAgentsResponse) GetAgents() []*AgentInfo {
	if x != nil {
		return x.Agents
	}
	return nil
}

type AgentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentInfo) Reset() {
	*x = AgentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cremona_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfo) ProtoMessage() {}

func (x *AgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cremona_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfo.ProtoReflect.Descriptor instead.
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return file_proto_cremona_proto_rawDescGZIP(), []int{6}
}

var File_proto_cremona_proto protoreflect.FileDescriptor

var file_proto_cremona_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x65, 0x6d, 0x6f, 0x6e, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x55, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x57,
	0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x3a,
	0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0b, 0x0a, 0x09, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x92, 0x01, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x12, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x35, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cremona_proto_rawDescOnce sync.Once
	file_proto_cremona_proto_rawDescData = file_proto_cremona_proto_rawDesc
)

func file_proto_cremona_proto_rawDescGZIP() []byte {
	file_proto_cremona_proto_rawDescOnce.Do(func() {
		file_proto_cremona_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cremona_proto_rawDescData)
	})
	return file_proto_cremona_proto_rawDescData
}

var file_proto_cremona_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_cremona_proto_goTypes = []interface{}{
	(*AgentIdentity)(nil),        // 0: AgentIdentity
	(*Empty)(nil),                // 1: Empty
	(*AgentErrorMessage)(nil),    // 2: AgentErrorMessage
	(*AgentHealthResponse)(nil),  // 3: AgentHealthResponse
	(*AgentHealthReqest)(nil),    // 4: AgentHealthReqest
	(*ActiveAgentsResponse)(nil), // 5: ActiveAgentsResponse
	(*AgentInfo)(nil),            // 6: AgentInfo
}
var file_proto_cremona_proto_depIdxs = []int32{
	0, // 0: AgentErrorMessage.identity:type_name -> AgentIdentity
	0, // 1: AgentHealthResponse.identity:type_name -> AgentIdentity
	0, // 2: AgentHealthReqest.identity:type_name -> AgentIdentity
	6, // 3: ActiveAgentsResponse.agents:type_name -> AgentInfo
	0, // 4: Agent.Started:input_type -> AgentIdentity
	2, // 5: Agent.Error:input_type -> AgentErrorMessage
	3, // 6: Agent.HealthCheck:input_type -> AgentHealthResponse
	1, // 7: Info.ActiveAgents:input_type -> Empty
	1, // 8: Agent.Started:output_type -> Empty
	1, // 9: Agent.Error:output_type -> Empty
	4, // 10: Agent.HealthCheck:output_type -> AgentHealthReqest
	5, // 11: Info.ActiveAgents:output_type -> ActiveAgentsResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_cremona_proto_init() }
func file_proto_cremona_proto_init() {
	if File_proto_cremona_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_cremona_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentHealthReqest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cremona_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cremona_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_cremona_proto_goTypes,
		DependencyIndexes: file_proto_cremona_proto_depIdxs,
		MessageInfos:      file_proto_cremona_proto_msgTypes,
	}.Build()
	File_proto_cremona_proto = out.File
	file_proto_cremona_proto_rawDesc = nil
	file_proto_cremona_proto_goTypes = nil
	file_proto_cremona_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	Started(ctx context.Context, in *AgentIdentity, opts ...grpc.CallOption) (*Empty, error)
	Error(ctx context.Context, in *AgentErrorMessage, opts ...grpc.CallOption) (*Empty, error)
	HealthCheck(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthCheckClient, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Started(ctx context.Context, in *AgentIdentity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Agent/Started", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Error(ctx context.Context, in *AgentErrorMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Agent/Error", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) HealthCheck(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthCheckClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/Agent/HealthCheck", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentHealthCheckClient{stream}
	return x, nil
}

type Agent_HealthCheckClient interface {
	Send(*AgentHealthResponse) error
	Recv() (*AgentHealthReqest, error)
	grpc.ClientStream
}

type agentHealthCheckClient struct {
	grpc.ClientStream
}

func (x *agentHealthCheckClient) Send(m *AgentHealthResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentHealthCheckClient) Recv() (*AgentHealthReqest, error) {
	m := new(AgentHealthReqest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	Started(context.Context, *AgentIdentity) (*Empty, error)
	Error(context.Context, *AgentErrorMessage) (*Empty, error)
	HealthCheck(Agent_HealthCheckServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) Started(context.Context, *AgentIdentity) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Started not implemented")
}
func (*UnimplementedAgentServer) Error(context.Context, *AgentErrorMessage) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Error not implemented")
}
func (*UnimplementedAgentServer) HealthCheck(Agent_HealthCheckServer) error {
	return status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Started_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Started(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Started",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Started(ctx, req.(*AgentIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Error_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentErrorMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Error(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Error",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Error(ctx, req.(*AgentErrorMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_HealthCheck_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).HealthCheck(&agentHealthCheckServer{stream})
}

type Agent_HealthCheckServer interface {
	Send(*AgentHealthReqest) error
	Recv() (*AgentHealthResponse, error)
	grpc.ServerStream
}

type agentHealthCheckServer struct {
	grpc.ServerStream
}

func (x *agentHealthCheckServer) Send(m *AgentHealthReqest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentHealthCheckServer) Recv() (*AgentHealthResponse, error) {
	m := new(AgentHealthResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Started",
			Handler:    _Agent_Started_Handler,
		},
		{
			MethodName: "Error",
			Handler:    _Agent_Error_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HealthCheck",
			Handler:       _Agent_HealthCheck_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/cremona.proto",
}

// InfoClient is the client API for Info service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoClient interface {
	ActiveAgents(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ActiveAgentsResponse, error)
}

type infoClient struct {
	cc grpc.ClientConnInterface
}

func NewInfoClient(cc grpc.ClientConnInterface) InfoClient {
	return &infoClient{cc}
}

func (c *infoClient) ActiveAgents(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ActiveAgentsResponse, error) {
	out := new(ActiveAgentsResponse)
	err := c.cc.Invoke(ctx, "/Info/ActiveAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServer is the server API for Info service.
type InfoServer interface {
	ActiveAgents(context.Context, *Empty) (*ActiveAgentsResponse, error)
}

// UnimplementedInfoServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServer struct {
}

func (*UnimplementedInfoServer) ActiveAgents(context.Context, *Empty) (*ActiveAgentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveAgents not implemented")
}

func RegisterInfoServer(s *grpc.Server, srv InfoServer) {
	s.RegisterService(&_Info_serviceDesc, srv)
}

func _Info_ActiveAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).ActiveAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Info/ActiveAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).ActiveAgents(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Info_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Info",
	HandlerType: (*InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActiveAgents",
			Handler:    _Info_ActiveAgents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cremona.proto",
}
